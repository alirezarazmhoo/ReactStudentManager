[{"C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\index.js":"1","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\App.js":"3","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\components\\Navigation\\NavigationItem.js":"4","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\screens\\Teachers.js":"5","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\screens\\Students.js":"6","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\components\\UI\\Input\\Input.js":"7","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\components\\UI\\Table\\Table.js":"8","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\axios.js":"9","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\components\\UI\\Modal\\Modal.js":"10","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\store\\reducer.js":"11","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\store\\actions.js":"12","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\components\\CounterControl\\CounterControl.js":"13","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\components\\CounterOutput\\CounterOutput.js":"14","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\store\\types.js":"15","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\store\\Index.js":"16","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\components\\UI\\Upload\\Upload.js":"17","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\components\\UI\\SelectOption\\SelectOption.js":"18","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\store\\Service.js":"19"},{"size":927,"mtime":1626452970054,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":447,"mtime":1617004274348,"results":"23","hashOfConfig":"21"},{"size":1206,"mtime":1616314709340,"results":"24","hashOfConfig":"21"},{"size":5735,"mtime":1627668235438,"results":"25","hashOfConfig":"21"},{"size":9272,"mtime":1618162873932,"results":"26","hashOfConfig":"21"},{"size":1197,"mtime":1616826579692,"results":"27","hashOfConfig":"21"},{"size":1569,"mtime":1627757449210,"results":"28","hashOfConfig":"21"},{"size":135,"mtime":1617263014519,"results":"29","hashOfConfig":"21"},{"size":1014,"mtime":1617983103469,"results":"30","hashOfConfig":"21"},{"size":6225,"mtime":1627755993685,"results":"31","hashOfConfig":"21"},{"size":5234,"mtime":1627757319091,"results":"32","hashOfConfig":"21"},{"size":234,"mtime":1618807974426,"results":"33","hashOfConfig":"21"},{"size":223,"mtime":1618808145733,"results":"34","hashOfConfig":"21"},{"size":768,"mtime":1627755892933,"results":"35","hashOfConfig":"21"},{"size":260,"mtime":1627667105551,"results":"36","hashOfConfig":"21"},{"size":335,"mtime":1627626635061,"results":"37","hashOfConfig":"21"},{"size":449,"mtime":1627667663723,"results":"38","hashOfConfig":"21"},{"size":374,"mtime":1627754756764,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"tefy4p",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\index.js",[],["86","87"],"C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\App.js",["88","89"],"import logo from './logo.svg';\nimport NavigationItem from './components/Navigation/NavigationItem'\nimport './App.css';\nimport React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Teachers from './screens/Teachers';\n\nclass App extends Component {\n  render () {\n    return (\n         <BrowserRouter>\n      <div>\n\n<NavigationItem />\n\n\n      </div>\n            </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\components\\Navigation\\NavigationItem.js",[],"C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\screens\\Teachers.js",["90"],"\r\nimport React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport MModal from '../components/UI/Modal/Modal';\r\nimport Input from '../components/UI/Input/Input';\r\nimport *  as TeacherActions from '../store/Index';\r\nimport Table from '../components/UI/Table/Table';\r\nimport Upload from '../components/UI/Upload/Upload';\r\nimport SelectOption from '../components/UI/SelectOption/SelectOption';\r\nclass Teachers extends Component {\r\n\r\n    state = {\r\n      file: this.props.selectedFile\r\n    }\r\n\r\ncomponentDidMount(){  \r\n this.props.Get_Data(false , \"\");\r\n\r\n }\r\n\r\n\r\nnextPage = ()=> {\r\n\r\n}\r\npreviousPage = () => {\r\n\r\n}\r\n//  question = (e) => {\r\n//  this.props.Remove_Data(e.target.parentNode.parentNode.id);\r\n\r\n\r\n// };\r\n question = (e) => {\r\n\r\n   this.props.ModalHandler(e.target.parentNode.parentNode.id);\r\n  };\r\n\r\nremove = (e) => {\r\n\r\n this.props.Remove_Data(this.props.studentselectedid);\r\n}\r\ncloseModal = () => {\r\nthis.props.CloseModalHandler();\r\n}\r\n\r\nedit = (e) =>{\r\n this.props.EditData( e.target.parentNode.parentNode.parentNode.rows[e.target.parentNode.parentNode.rowIndex].cells );\r\nif(e.target.parentNode.parentNode.parentNode.rows[e.target.parentNode.parentNode.rowIndex].cells[1].getElementsByTagName(\"img\")[0] !=null)\r\n{\r\n\r\nthis.setState({file: e.target.parentNode.parentNode.parentNode.rows[e.target.parentNode.parentNode.rowIndex].cells[1].getElementsByTagName(\"img\")[0].src});\r\n}\r\nelse{\r\n    this.setState({file : null})\r\n}\r\n\r\n}\r\npostData = () => {\r\nthis.setState({file:  null});\r\nthis.props.SelectFileHandler(null);\r\nthis.props.PostDataHandler(this.props.inputs,this.props.studentselectedid,this.props.isEditMode , this.props.selectedFile , this.props.majorId);\r\n\r\n}\r\n\r\nfileSelectHandler  = event => {\r\n\r\nthis.props.SelectFileHandler(event.target.files[0]);\r\nthis.setState({file:  URL.createObjectURL(event.target.files[0])});\r\nevent.target.value = null;\r\n\r\n}\r\n\r\nsearch = () =>{\r\n this.props.Get_Data(true , this.props.txtSearchValue);\r\n}\r\n\r\nfilltxtSearch = (e)=>{\r\n  this.props.SearchInputHandler(e.target.value);\r\n}\r\n  handleChange = (e) =>{\r\n\r\n  this.props.MajorInputHandler(e.target.value);\r\n}\r\n\r\n render () {\r\n  const tableHeaders = ['عملیات','مدرک','تصویر','آدرس' , 'کدملی', 'نام خانوادگی' , 'نام', 'ردیف'];\r\n  const formElementsArray = [];\r\n  for (let key in this.props.inputs) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.props.inputs[key]\r\n            });\r\n        }\r\nlet main = (<div><div className=\"container\">\r\n        {formElementsArray.map(formElement => (\r\n                    <Input \r\n                       key={formElement.id}\r\n                       label ={formElement.config.label}\r\n                       inputtype = {formElement.config.elementType}\r\n                       elementConfig = {formElement.config.elementConfig}\r\n                       value = {formElement.config.value}\r\n                        changed = {(event) => this.props.onIncrementCounter(event , formElement.id)}\r\n                    />\r\n                ))}\r\n<SelectOption handleChange={this.handleChange} list={this.props.majorList} />\r\n                <input onChange={this.fileSelectHandler} className=\"selectFile\" type=\"file\"  />\r\n {this.state.file !=null ?<Upload url={this.state.file} /> : \"\" }\r\n\r\n<div>\r\n<button className=\"submit\" onClick={()=> this.postData()} >{this.props.isEditMode == true ? \"ویرایش\" : \"ثبت\"}</button>\r\n<div>\r\n<input className=\"inputsearch\" placeholder=\"متن جستجو را وارد کنید\" value={this.props.txtSearchValue} onChange = {(event) => this.filltxtSearch(event)}/>\r\n<button onClick={this.search} className=\"search\"  >جستجو</button>\r\n</div>\r\n\r\n</div>\r\n<Table personsArray={this.props.mystudents} headers={tableHeaders} question={this.question.bind(this)} edit={this.edit.bind(this)}  \r\nnextPage ={ this.nextPage.bind(this)}\r\npreviousPage = {this.previousPage.bind(this)}\r\n/>  \r\n\r\n\r\n</div>\r\n<MModal modalShow={this.props.modalShow} closeModal={this.closeModal.bind(this)}  question={this.question.bind(this)}\r\nremove={this.remove.bind(this)}\r\n/>\r\n</div>\r\n);\r\n\r\nreturn (\r\nmain\r\n);\r\n }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        inputs: state.orderForm,\r\n        // reset : state.shouldReset,\r\n        mystudents : state.realstudents,\r\n        counterstudent : state.counter,\r\n        studentselectedid : state.studentselectedid,\r\n        isEditMode : state.isEditMode , \r\n        modalShow :state.modalShow,\r\n        txtSearchValue : state.txtSearchValue , \r\n        selectedFile : state.selectedFile , \r\n        majorId :state.majorId,\r\n        majorList : state.majorList\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n         onIncrementCounter: (element , id) => dispatch({type: 'InputUserHandler' , el : element , id : id}),\r\n         PostDataHandler : (el,id,mode,file , majorId) => dispatch(TeacherActions.PostDataHandler(el,id,mode, file , majorId)),\r\n         Get_Data : (isSearch,txt) => dispatch(TeacherActions.initGetData(isSearch, txt)),\r\n         Remove_Data : (id) => dispatch(TeacherActions.Remove_Data(id)),\r\n         EditData : (name) => dispatch(TeacherActions.EditData(name)),\r\n         ModalHandler : (id) => dispatch(TeacherActions.ModalHandler(id)),\r\n         CloseModalHandler : (id) => dispatch(TeacherActions.CloseModalHandler()),\r\n         SearchInputHandler : (txt)=> dispatch(TeacherActions.SearchInputHandler(txt)),\r\n         SelectFileHandler  : (file) => dispatch(TeacherActions.SelectFileHandler(file)),\r\n         MajorInputHandler : (id) => dispatch(TeacherActions.MajorInputHandler(id)),\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Teachers);","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\screens\\Students.js",["91","92","93"],"\r\nimport React, { Component } from 'react';\r\nimport './studentstyle.css';\r\nimport Input from '../components/UI/Input/Input';\r\nimport Table from '../components/UI/Table/Table';\r\nimport Modal from '../components/UI/Modal/Modal';\r\n\r\nimport axios from '../axios';\r\nimport MModal from '../components/UI/Modal/Modal';\r\n\r\nclass Students extends Component {\r\n\r\n\r\n\r\n  state= {\r\norderForm :{\r\n         name: {\r\n                elementType: 'input',\r\n                label : 'نام:',\r\n                 elementConfig: {\r\n                    type: 'text',\r\n                placeholder: 'نام خود را وارد کنید '\r\n                },\r\n                value: '',\r\n                validation :{\r\n                  required :true , \r\n                  minLenght :5,\r\n                  maxLenght :15\r\n                },\r\n                 valid : false , \r\n                 touched :false\r\n            },\r\n       \r\n             lastname: {\r\n                elementType: 'input',\r\n                label : 'نام خانوادگی:',\r\n                 elementConfig: {\r\n                    type: 'text',\r\n                placeholder: 'نام خانوادگی خود را وارد کنید '\r\n                },\r\n\r\n                value: '',\r\n                validation :{\r\n                  required :true,\r\n                    minLenght :5,\r\n                  maxLenght :15\r\n                },\r\n                 valid : false,\r\n                    touched :false\r\n\r\n            },\r\n             nationalcode: {\r\n                elementType: 'input',\r\n                label : 'کدملی:',\r\n                 elementConfig: {\r\n                    type: 'text',\r\n                placeholder: 'کدملی  خود را وارد کنید '\r\n                },\r\n                value: '',\r\n                validation :{\r\n                  required :true,\r\n                    minLenght :10,\r\n                  maxLenght :10\r\n                },\r\n                 valid : false,\r\n                    touched :false\r\n\r\n            },\r\n                 adddress: {\r\n                elementType: 'textarea',\r\n                label : 'آدرس:',\r\n                 elementConfig: {\r\n                    type: 'text',\r\n                placeholder: 'آدرس  خود را وارد کنید '\r\n                },\r\n                value: '',\r\n                validation :{\r\n                  required :true,\r\n                    minLenght :20,\r\n                  maxLenght :20\r\n                },\r\n                 valid : false,\r\n               touched :false, \r\n            },\r\n                  search: {\r\n                elementType: 'input',             \r\n                value: '',\r\n                validation :{\r\n                  required :true,\r\n                    minLenght :20,\r\n                  maxLenght :20\r\n                },\r\n                 valid : false,\r\n               touched :false, \r\n            }\r\n      \r\n} , \r\nrealstudents :[], \r\nmodalShow :false ,\r\neditMode : false,\r\nstudentselectedid : 0,\r\ntxtSearchValue : '' , \r\npageNumber : 1,\r\nhasNext :true\r\n  };\r\n\r\ncomponentDidMount(){\r\n\r\n axios.get('Students?pageNumber='+this.state.pageNumber ).then(response => {\r\n   this.setState({realstudents :response.data.students})\r\n     this.setState({hasNext :response.data.hasNext})\r\n   }); \r\n }\r\n\r\nremove = (e) => {\r\n\r\n   axios.post('Students/DeleteStudent/'+this.state.studentselectedid+'').then(response => {\r\n   this.componentDidMount();\r\n   this.closeModal();\r\n   this.resetForm();\r\n  }); \r\n}\r\ninputUserHandler(event , inputIdentifier){\r\nconst updatedOrderForm  = {...this.state.orderForm};\r\nconst updatedFormElement = { \r\n            ...updatedOrderForm[inputIdentifier]\r\n};\r\nupdatedFormElement.value = event.target.value;\r\nupdatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\nupdatedFormElement.touched = true ; \r\nupdatedOrderForm[inputIdentifier] = updatedFormElement;\r\nthis.setState({orderForm: updatedOrderForm});\r\nconsole.log(updatedFormElement);\r\n}\r\n\r\ncheckValidity(value , rules){\r\n  let isValid= false ; \r\nif(rules.required){\r\n\r\nisValid = value.trim() !== '';\r\nif(rules.minLenght){\r\n  \r\n  isValid = value.length >= rules.minLenght && isValid;\r\n\r\n}\r\nif(rules.maxLenght){\r\n  isValid = value.length <= rules.maxLenght && isValid;\r\n}\r\n\r\nreturn isValid;\r\n}\r\nelse{\r\n  return true ; \r\n}\r\n}\r\n\r\nedit = (e) =>{\r\n const updatedOrderForm  ={...this.state.orderForm};\r\n let i = 5;\r\n for (const key in updatedOrderForm) {\r\n   i-- ; \r\nconst updatedFormElement = { \r\n            ...updatedOrderForm[key]\r\n};\r\nupdatedFormElement.value = e.target.parentNode.parentNode.parentNode.rows[e.target.parentNode.parentNode.rowIndex].cells[i].innerHTML;\r\n updatedOrderForm[key] = updatedFormElement;\r\nthis.setState({orderForm: updatedOrderForm});\r\n    \r\n   }\r\n\r\nthis.setState({editMode: true});\r\nthis.setState({studentselectedid: e.target.parentNode.parentNode.id});\r\n}\r\nresetForm = () => {\r\n\r\n const updatedOrderForm  ={...this.state.orderForm};\r\n for (const key in updatedOrderForm) {\r\nconst updatedFormElement = { \r\n            ...updatedOrderForm[key]\r\n};\r\nupdatedFormElement.value = '';\r\n updatedOrderForm[key] = updatedFormElement;\r\nthis.setState({orderForm: updatedOrderForm});\r\n\r\n   }\r\nthis.setState({editMode: false});\r\nthis.setState({studentselectedid: 0});\r\n}\r\n\r\n\r\npostDataHandler = ()=> {\r\n  \r\nconst post = {\r\nname :this.state.orderForm.name.value ,\r\nlastname : this.state.orderForm.lastname.value , \r\nnationalcode : this.state.orderForm.nationalcode.value , \r\naddress : this.state.orderForm.adddress.value,\r\nid :this.state.studentselectedid\r\n}\r\n\r\n  axios.post(this.state.editMode? \"Students/EditStudent\" : \"Students\", post).then(response => {\r\n    this.resetForm();\r\n   this.componentDidMount();\r\n   console.log(response)\r\n  }); \r\n\r\n}\r\n\r\nfilltxtSearch = (e)=>{\r\n  this.setState({txtSearchValue : e.target.value});\r\n\r\n}\r\n\r\n\r\n\r\nsearch = () =>{\r\naxios.get('Students?txtSearch='+this.state.txtSearchValue).then(response => {\r\n  this.setState({realstudents :[]})\r\n  this.setState({realstudents :response.data.students})\r\n  this.setState({txtSearchValue : ''});\r\n\r\n  }); \r\n}\r\n question = (e) => {\r\n   this.setState({showModal: true});\r\n   this.setStudentId(e.target.parentNode.parentNode.id)\r\n  };\r\ncloseModal = ()=>{\r\n   this.setState({showModal: false})\r\n}\r\nsetStudentId = (id) => {\r\nthis.setState({studentselectedid : id})\r\n}\r\n\r\n nextPage = ()=> {\r\n\r\nvar oldstate = this.state.pageNumber;\r\n\r\noldstate += 1 ; \r\nthis.setState({pageNumber : oldstate});\r\n\r\n if(this.state.hasNext == true){\r\n let newpagenumber = this.state.pageNumber +1 ; \r\n  this.setState({pageNumber : newpagenumber })\r\n this.componentDidMount()\r\n }\r\n\r\n}\r\npreviousPage = () => {\r\n  let newpagenumber = this.state.pageNumber -1 ; \r\nif(newpagenumber >1){\r\nthis.setState({pageNumber : newpagenumber })\r\nthis.componentDidMount()\r\n}\r\n}\r\n\r\n// componentDidUpdate =()=> {\r\n\r\n// this.componentDidMount();\r\n  \r\n// }\r\n\r\n  render () {\r\n  const formElementsArray = [];\r\n  //  const  students = this.state.realstudents.stu ; \r\n   const  students =this.state.realstudents; \r\n\r\n  const tableHeaders = ['عملیات','آدرس' , 'کدملی', 'نام خانوادگی' , 'نام', 'ردیف'];\r\n\r\n  for (let key in this.state.orderForm) {\r\n    if(key!=\"search\"){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n    }\r\n        }\r\nlet main =(<div><div className=\"container\">\r\n     \r\n\r\n        {formElementsArray.map(formElement => (\r\n          \r\n                    <Input \r\n                       key={formElement.id}\r\n                       label ={formElement.config.label}\r\n                       inputtype = {formElement.config.elementType}\r\n                       elementConfig = {formElement.config.elementConfig}\r\n                       value = {formElement.config.value}\r\n                       changed = {(event) => this.inputUserHandler(event , formElement.id)}\r\n                       invalid = {formElement.config.valid}\r\n                       shouldValid = {formElement.config.validation.required}\r\n                       touched ={formElement.config.touched}\r\n                    />\r\n                ))}\r\n<div>\r\n<button className=\"submit\" onClick={this.postDataHandler}>{this.state.editMode ? \"ویرایش\" : \"ثبت\"} </button>\r\n{this.state.editMode ? <button className=\"warning\" onClick={this.resetForm} >ریست</button>\r\n : null  }\r\n\r\n</div>\r\n\r\n</div>\r\n<div className=\"containertable\">\r\n<div>\r\n<div>\r\n<label className=\"label\">: جستجو</label>\r\n<input className=\"inputsearch\" placeholder=\"متن جستجو را وارد کنید\" value={this.state.txtSearchValue} onChange = {(event) => this.filltxtSearch(event)}/>\r\n<button onClick={this.search} className=\"search\"  >جستجو</button>\r\n\r\n</div>\r\n</div>\r\n\r\n<Table personsArray={students} headers={tableHeaders} question={this.question.bind(this)} edit={this.edit.bind(this)}  \r\nnextPage ={ this.nextPage.bind(this)}\r\npreviousPage = {this.previousPage.bind(this)}\r\n/>\r\n<MModal modalShow={this.state.showModal} closeModal={this.closeModal.bind(this)}  question={this.question.bind(this)}\r\nremove={this.remove.bind(this)}\r\n/>\r\n\r\n</div>\r\n</div>\r\n);\r\n\r\n    return (\r\n      \r\nmain\r\n\r\n\r\n);\r\n  }\r\n}\r\nexport default Students;","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\components\\UI\\Input\\Input.js",["94","95"],"import React from 'react';\r\nimport './Input.css';\r\n\r\n\r\nconst input = (props) =>  {\r\nlet inputElement = null ; \r\n\r\n\r\nswitch (props.inputtype) {\r\n    case ('input'):\r\nif(props.invalid ==false && props.shouldValid && props.touched){\r\n        inputElement = <input className=\"inputinvalid\" {...props.elementConfig} value={props.value}   onChange={props.changed}/>\r\n}\r\nelse{\r\n\r\n        inputElement = <input className=\"input\" {...props.elementConfig} value={props.value}   onChange={props.changed}/>\r\n}\r\n        break;\r\ncase ('textarea'):\r\n        inputElement = <textarea className=\"textarea\" {...props.elementConfig} value={props.value}  onChange={props.changed}/>\r\nbreak;\r\n    default:\r\nif(props.invalid  ==false  && props.shouldValid && props.touched){\r\n        inputElement = <input className=\"inputinvalid\" {...props.elementConfig} value={props.value}   onChange={props.changed}/>\r\n}\r\nelse{\r\n\r\n        inputElement = <input className=\"input\" {...props.elementConfig} value={props.value}   onChange={props.changed}/>\r\n}\r\n}\r\n\r\n    return (\r\n        <div>\r\n         <label className=\"label\">{props.label}</label>\r\n           {inputElement}\r\n        </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default input;\r\n\r\n","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\components\\UI\\Table\\Table.js",["96","97","98","99"],"C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\axios.js",[],"C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\components\\UI\\Modal\\Modal.js",[],"C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\store\\reducer.js",["100","101","102","103"],"import * as actionTypes from './types';\r\nimport axios from '../axios';\r\n\r\nconst initialState = {\r\norderForm :{\r\n         name: {\r\n                elementType: 'input',\r\n                label : 'نام:',\r\n                 elementConfig: {\r\n                    type: 'text',\r\n                placeholder: 'نام خود را وارد کنید '\r\n                },\r\n                value: '',\r\n                validation :{\r\n                  required :true , \r\n                  minLenght :5,\r\n                  maxLenght :15\r\n                },\r\n                 valid : false , \r\n                 touched :false\r\n            },\r\n       \r\n             lastname: {\r\n                elementType: 'input',\r\n                label : 'نام خانوادگی:',\r\n                 elementConfig: {\r\n                    type: 'text',\r\n                placeholder: 'نام خانوادگی خود را وارد کنید '\r\n                },\r\n\r\n                value: '',\r\n                validation :{\r\n                  required :true,\r\n                    minLenght :5,\r\n                  maxLenght :15\r\n                },\r\n                 valid : false,\r\n                    touched :false\r\n            } ,\r\n                         nationalcode: {\r\n                elementType: 'input',\r\n                label : 'کدملی:',\r\n                 elementConfig: {\r\n                    type: 'text',\r\n                placeholder: 'کدملی  خود را وارد کنید '\r\n                },\r\n                value: '',\r\n                validation :{\r\n                  required :true,\r\n                    minLenght :10,\r\n                  maxLenght :10\r\n                },\r\n                 valid : false,\r\n                    touched :false\r\n\r\n            },\r\n                 adddress: {\r\n                elementType: 'textarea',\r\n                label : 'آدرس:',\r\n                 elementConfig: {\r\n                    type: 'text',\r\n                placeholder: 'آدرس  خود را وارد کنید '\r\n                },\r\n                value: '',\r\n                validation :{\r\n                  required :true,\r\n                    minLenght :20,\r\n                  maxLenght :20\r\n                },\r\n                 valid : false,\r\n               touched :false, \r\n            },\r\n} ,\r\nshouldReset:false,\r\nrealstudents :[],\r\ncounter : 0,\r\nstudentselectedid : 0,\r\nisEditMode :false , \r\nmodalShow :false ,\r\ntxtSearchValue : '' , \r\nselectedFile : null , \r\nmajorId : 0,\r\nmajorList : []\r\n};\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.InputUserHandler:\r\n        \r\nconst updatedOrderForm  = {...state.orderForm};\r\nconst updatedFormElement = { \r\n            ...updatedOrderForm[action.id]\r\n};\r\nupdatedFormElement.value = action.el.target.value ;\r\nupdatedOrderForm[action.id] = updatedFormElement;\r\nreturn{\r\n...state , \r\norderForm : updatedOrderForm,\r\n\r\n}\r\n// case actionTypes.Remove_Data :\r\n//  const arraystudent2 = []  ;\r\n//  const updatedOrderForm3  = {...state.orderForm};\r\n//  axios.post('Students/DeleteStudent/'+ action.id +'').then(response => {\r\n//  axios.get('Students?pageNumber=1' ).then(response => {\r\n//  updatedOrderForm3.realstudents = response.data.students;\r\n//  const myites = response.data.students ; \r\n// for (var i = 0; i < myites.length; i++) {\r\n//   arraystudent2.push(myites[i]);\r\n// }\r\n//   }); \r\n\r\n// });\r\n \r\n// return {\r\n// ...state ,\r\n//  realstudents : arraystudent2\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// case actionTypes.PostDataHandler:\r\n\r\n\r\n\r\n// const post = {\r\n\r\n// name : state.orderForm.name.value ,\r\n// lastname : state.orderForm.lastname.value , \r\n// nationalcode : state.orderForm.nationalcode.value , \r\n// address : state.orderForm.adddress.value,\r\n// }\r\n//  const updatedOrderForm4  = {...state.orderForm};\r\n//   const arraystudent4 = []  ;\r\n//  axios.post(\"Students\", post).then(response => {\r\n\r\n//  axios.get('Students?pageNumber=1' ).then(response => {\r\n//  updatedOrderForm4.realstudents = response.data.students;\r\n//  const myites4 = response.data.students ; \r\n// for (var i = 0; i < myites4.length; i++) {\r\n//   arraystudent4.push(myites4[i]);\r\n// }\r\n// }); \r\n// }); \r\n\r\n\r\n// var resetOrderForm = {...state.orderForm};\r\n// resetOrderForm.name.value = '';\r\n// resetOrderForm.lastname.value = ''; \r\n// resetOrderForm.nationalcode.value = '';\r\n// resetOrderForm.adddress.value = '';\r\n// return {\r\n// ...state , \r\n// orderForm : resetOrderForm,\r\n// realstudents : arraystudent4\r\n// }\r\n\r\ncase actionTypes.EditData :\r\n\r\nvar resetOrderForm = {...state.orderForm};\r\nvar selectedUserId = {...state};\r\nresetOrderForm.name.value = action.name[5].innerHTML;\r\nresetOrderForm.lastname.value =action.name[4].innerHTML; \r\nresetOrderForm.nationalcode.value = action.name[3].innerHTML;\r\nresetOrderForm.adddress.value = action.name[2].innerHTML;\r\n\r\nreturn {\r\n...state ,\r\n\r\norderForm : resetOrderForm,\r\nstudentselectedid : action.name[6].innerHTML,\r\nisEditMode : true,\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\ncase actionTypes.Get_Data :\r\n\r\nvar resetOrderForm = {...state.orderForm};\r\nresetOrderForm.name.value = '';\r\nresetOrderForm.lastname.value = ''; \r\nresetOrderForm.nationalcode.value = '';\r\nresetOrderForm.adddress.value = '';\r\n return {\r\n ...state ,\r\n counter : action.counter,\r\n realstudents : action.realstudents,\r\n orderForm : resetOrderForm,\r\n isEditMode : false,\r\n modalShow : false , \r\n txtSearchValue : '',\r\n majorList : action.majorList\r\n }\r\n\r\ncase actionTypes.ModalHandler :\r\n return {\r\n ...state ,\r\n modalShow : true , \r\n studentselectedid : action.studentselectedid\r\n }\r\ncase actionTypes.CloseModalHandler :\r\n return {\r\n ...state ,\r\n modalShow : false , \r\n selectedUserId : 0\r\n }\r\n\r\ncase actionTypes.SearchInputHandler :\r\n\r\n// var search = {...state};\r\n\r\n// search.txtSearchValue += action.txtSearchValue ; \r\n\r\n return {\r\n ...state ,\r\ntxtSearchValue : action.txtSearchValue\r\n }\r\n\r\n\r\n case actionTypes.SelectFileHandler :\r\n\r\n return {\r\n ...state ,\r\n selectedFile : action.selectedFile\r\n }\r\n\r\n case actionTypes.MajorInputHandler :\r\n return {\r\n ...state ,\r\n majorId : action.majaorid\r\n }\r\n\r\n  }\r\n    return state;\r\n};\r\nexport default reducer;","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\store\\actions.js",["104","105","106","107"],"C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\components\\CounterControl\\CounterControl.js",[],["108","109"],"C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\components\\CounterOutput\\CounterOutput.js",[],"C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\store\\types.js",[],"C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\store\\Index.js",[],"C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\components\\UI\\Upload\\Upload.js",["110"],"import React, {Component} from 'react'\r\nimport './Upload.css';\r\n\r\n\r\nclass Upload extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      file: null\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src={this.props.url}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Upload;\r\n","C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\components\\UI\\SelectOption\\SelectOption.js",[],"C:\\Users\\Razmjoo\\Desktop\\New folder\\.ReactJsProject\\my-app\\src\\store\\Service.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":12},{"ruleId":"115","severity":1,"message":"119","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":111,"column":83,"nodeType":"122","messageId":"123","endLine":111,"endColumn":85},{"ruleId":"115","severity":1,"message":"124","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":242,"column":24,"nodeType":"122","messageId":"123","endLine":242,"endColumn":26},{"ruleId":"120","severity":1,"message":"125","line":271,"column":11,"nodeType":"122","messageId":"123","endLine":271,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":11,"column":18,"nodeType":"122","messageId":"123","endLine":11,"endColumn":20},{"ruleId":"120","severity":1,"message":"121","line":23,"column":19,"nodeType":"122","messageId":"123","endLine":23,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":7,"column":7,"nodeType":"128","messageId":"129","endLine":10,"endColumn":5},{"ruleId":"130","severity":1,"message":"131","line":18,"column":50,"nodeType":"132","endLine":18,"endColumn":89},{"ruleId":"133","severity":1,"message":"134","line":49,"column":3,"nodeType":"132","endLine":49,"endColumn":36},{"ruleId":"133","severity":1,"message":"134","line":50,"column":3,"nodeType":"132","endLine":50,"endColumn":40},{"ruleId":"115","severity":1,"message":"135","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":13},{"ruleId":"136","severity":1,"message":"137","line":86,"column":5,"nodeType":"138","messageId":"139","endLine":238,"endColumn":4},{"ruleId":"115","severity":1,"message":"140","line":162,"column":5,"nodeType":"117","messageId":"118","endLine":162,"endColumn":19},{"ruleId":"141","severity":1,"message":"142","line":184,"column":5,"nodeType":"117","messageId":"143","endLine":184,"endColumn":19},{"ruleId":"115","severity":1,"message":"144","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":27},{"ruleId":"120","severity":1,"message":"121","line":69,"column":13,"nodeType":"122","messageId":"123","endLine":69,"endColumn":15},{"ruleId":"120","severity":1,"message":"121","line":136,"column":9,"nodeType":"122","messageId":"123","endLine":136,"endColumn":11},{"ruleId":"115","severity":1,"message":"145","line":147,"column":7,"nodeType":"117","messageId":"118","endLine":147,"endColumn":11},{"ruleId":"111","replacedBy":"146"},{"ruleId":"113","replacedBy":"147"},{"ruleId":"130","severity":1,"message":"131","line":17,"column":9,"nodeType":"132","endLine":17,"endColumn":36},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Teachers' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Modal' is defined but never used.","Expected '!==' and instead saw '!='.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'axios' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'selectedUserId' is assigned a value but never used.","no-redeclare","'resetOrderForm' is already defined.","redeclared","'TutorialDataService' is defined but never used.","'post' is assigned a value but never used.",["148"],["149"],"no-global-assign","no-unsafe-negation"]